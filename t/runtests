#!/bin/sh

fail() {
    echo "TEST FAILED: " "$@" | $HIGHLIGHT --color=red '^TEST FAILED'
    exit 1
}

allow_time() {
    (
        sleep $1
        if ps $$ > /dev/null ; then
            # send SIGHUP to runtests script
            kill -ALRM $$
            # send SIGHUP to children of runtest
            pkill -HUP -P $$
        fi
    ) &
}

timeout_handler() {
    fail "test timed out!  Likely hung..."
}

if which pkill >/dev/null 2>&1 ; then :
else
    echo "this script requires the 'pkill' utility"
    exit 1
fi

# allow users to override the highlight executable to be tested, but default to
# the one in this source tree
: ${HIGHLIGHT:=../highlight}
: ${BLEACH_TEXT:=../bleach_text}

# simple test
echo "testing tc0"
cat tc0.in | $HIGHLIGHT 'ipsum' > tc0.out
diff -q tc0.expected tc0.out || fail "tc0"

# check that commas work correctly
echo "testing tc1"
cat tc1.in | $HIGHLIGHT 'ipsum,foo' > tc1.out
diff -q tc1.expected tc1.out || fail "tc1"

# check that more sophisticated patterns work
echo "testing tc2"
cat tc2.in | $HIGHLIGHT --color=green '(?<=libero)\s+libero' > tc2.out
diff -q tc2.expected tc2.out || fail "tc2"

# check that case insensitivity works
echo "testing tc3"
cat tc3.in | $HIGHLIGHT -c blue -i 'praesent LEO' > tc3.out
diff -q tc3.expected tc3.out || fail "tc3"

# check that text with existing color doesn't break things
echo "testing tc4"
cat tc4.in | $HIGHLIGHT -c red -i 'goodell' > tc4.out
diff -q tc4.expected tc4.out || fail "tc4"

# make sure that at least simple zero-width patterns don't hang indefinitely
trap timeout_handler SIGALRM
allow_time 5
echo "testing tc5 (with 5 second timeout)"
cat tc5.in | $HIGHLIGHT '.*' > tc5.out
diff -q tc5.expected tc5.out || fail "tc5"
trap '' SIGALRM

# make sure that bleach_text actually strips color escape sequences
echo "testing tc6"
cat tc6.in | ../bleach_text > tc6.out
diff -q tc6.expected tc6.out || fail "tc6"

# Test a bunch of methods of the --filter syntax
echo "testing tc7"
cat tc7.in | $HIGHLIGHT --f red,light > tc7.out
diff -q tc7.expected tc7.out || fail "tc7"

# DJG: a good test idea, but it requires some newer version of Term::ANSIColor
# that I don't have on my perl 5.12.4 system in order to know about the
# "ansiXX" syntax.
echo "skipping tc8"
#
## Test a bunch of methods of the --filter syntax
##echo "testing tc8"
##cat tc8.in | $HIGHLIGHT --filter 'bold green,color' -f ansi11,and > tc8.out
##diff -q tc8.expected tc8.out || fail "tc8"

# Test the numeric version of the filter syntax
echo "testing tc9"
cat tc9.in | $HIGHLIGHT --filter '177,[\.\/-]' > tc9.out
diff -q tc9.expected tc9.out || fail "tc9"

# Alternate version of tc8 that exists to prove that multiple --filter specs
# work correctly (which is the whole motivation for the feature).
echo "testing tc10"
cat tc10.in | $HIGHLIGHT --filter 'bold magenta,aece' -f 'yellow',and > tc10.out
diff -q tc10.expected tc10.out || fail "tc10"

# TODO add UTF-8 tests and other goodness (probably would fail currently).  See
# https://github.com/goodell/nowrap/tree/master/tests for some decent unicode
# text to use in testing.

# TODO add miscellaneous other tests for:
# - patterns with alternation (m/foo|bar/) in them, possibly with multiple patterns as well
# - patterns that start with "-" (need to pass "--" to highlight)
# - that $HIGHLIGHT_COLOR is respected
# - that multiple patterns are supported correctly

echo "ALL TESTS PASSED!" | $HIGHLIGHT --color=green '.+'
